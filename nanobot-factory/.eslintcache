[{"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\index.js":"1","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\App.js":"2","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\home section\\index.js":"3","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\data.js":"4","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\smoothscroll.js":"5","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\upgrade section\\index.js":"6","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\stats section\\index.js":"7","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\formatnumbers.js":"8","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\home section\\cover.js":"9"},{"size":230,"mtime":1611549982384,"results":"10","hashOfConfig":"11"},{"size":115,"mtime":1612222813307,"results":"12","hashOfConfig":"11"},{"size":5354,"mtime":1612222863037,"results":"13","hashOfConfig":"11"},{"size":766,"mtime":1612222253759,"results":"14","hashOfConfig":"11"},{"size":868,"mtime":1611470012254,"results":"15","hashOfConfig":"11"},{"size":5812,"mtime":1612222027033,"results":"16","hashOfConfig":"11"},{"size":2624,"mtime":1611711984124,"results":"17","hashOfConfig":"11"},{"size":115,"mtime":1611711726223,"results":"18","hashOfConfig":"11"},{"size":930,"mtime":1612227770008,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"w98xgd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\index.js",[],["41","42"],"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\App.js",[],"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\home section\\index.js",["43","44","45","46","47"],"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\data.js",[],"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\smoothscroll.js",["48","49","50"],"export const smoothScroll = (section, e) => {\r\n  const section_1 = document.getElementById(\"clicker\");\r\n  const section_2 = document.getElementById(\"upgrades\");\r\n  const section_3 = document.getElementById(\"status\");\r\n  if (section == \"clicker\") {\r\n    if (e.deltaY > 0) {\r\n      section_2.scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (e.deltaY < 0) {\r\n      section_1.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  } else if (section == \"upgrades\") {\r\n    if (e.deltaY < 0) {\r\n      section_1.scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (e.deltaY > 0) {\r\n      section_3.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  } else if (section == \"status\") {\r\n    if (e.deltaY < 0) {\r\n      section_2.scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (e.deltaY > 0) {\r\n      section_3.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\upgrade section\\index.js",["51","52","53"],"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\stats section\\index.js",["54","55","56"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { data } from \"../other/data\";\r\nimport { formatNumbers } from \"../other/formatnumbers\";\r\nimport { smoothScroll } from \"../other/smoothscroll\";\r\nimport \"./stats.css\";\r\n\r\nconst StatsSection = ({ time }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"stats-section\"\r\n        id=\"status\"\r\n        onWheel={(e) => smoothScroll(\"status\", e)}\r\n      >\r\n        <div className=\"stats-container\">\r\n          <div>\r\n            <ManualUpgradeStats\r\n              level={data.manual_level}\r\n              mvalue={data.manual_value}\r\n            />\r\n            <OtherUpgradeStats\r\n              title=\"Builder\"\r\n              level={data.builder_level}\r\n              ovalue={data.builder_value}\r\n            />\r\n            <OtherUpgradeStats\r\n              title=\"Foundry\"\r\n              level={data.foundry_level}\r\n              ovalue={data.foundry_value}\r\n            />\r\n            <OtherUpgradeStats\r\n              title=\"Swarm\"\r\n              level={data.swarm_level}\r\n              ovalue={data.swarm_value}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TotalClicks clicks={data.total_clicks} />\r\n            <NanoPerSec nanos={data.nanobots_per_second} />\r\n          </div>\r\n          <div>\r\n            <TimePlayed clock={time} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ManualUpgradeStats = ({ level, mvalue }) => {\r\n  return (\r\n    <div className=\"upgrade-stats\">\r\n      <h1>Manual</h1>\r\n      <p>\r\n        Level: <span>{level}</span>\r\n      </p>\r\n      <p>\r\n        Value: <span>{formatNumbers(mvalue)}</span>\r\n        <sub>/click</sub>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OtherUpgradeStats = ({ title, level, ovalue }) => {\r\n  return (\r\n    <div className=\"upgrade-stats\">\r\n      <h1>{title}</h1>\r\n      <p>\r\n        Level: <span>{level}</span>\r\n      </p>\r\n      <p>\r\n        Value: <span>{formatNumbers(ovalue)}</span>\r\n        <sub>/sec</sub>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TotalClicks = ({ clicks }) => {\r\n  return (\r\n    <div className=\"total-clicks-stat\">\r\n      <h1>Clicks: </h1>\r\n      <p>{formatNumbers(clicks)}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NanoPerSec = ({ nanos }) => {\r\n  return (\r\n    <div className=\"nanopersec-stat\">\r\n      <h1>Automated Nanobots Per Second: </h1>\r\n      <p>{formatNumbers(nanos)}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TimePlayed = ({ clock }) => {\r\n  return (\r\n    <div className=\"time-stat\">\r\n      <h1>Total Time Played </h1>\r\n      <p>{clock}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsSection;\r\n","C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\formatnumbers.js",[],"C:\\Users\\rober\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\home section\\cover.js",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":63,"column":11,"nodeType":"69","endLine":63,"endColumn":51},{"ruleId":"62","severity":1,"message":"70","line":93,"column":19,"nodeType":"64","messageId":"65","endLine":93,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":121,"column":31,"nodeType":"73","messageId":"74","endLine":121,"endColumn":33},{"ruleId":"71","severity":1,"message":"75","line":5,"column":15,"nodeType":"73","messageId":"74","endLine":5,"endColumn":17},{"ruleId":"71","severity":1,"message":"75","line":11,"column":22,"nodeType":"73","messageId":"74","endLine":11,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":17,"column":22,"nodeType":"73","messageId":"74","endLine":17,"endColumn":24},{"ruleId":"62","severity":1,"message":"66","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":17,"column":6,"nodeType":"78","endLine":17,"endColumn":8,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"68","line":101,"column":9,"nodeType":"69","endLine":101,"endColumn":51},{"ruleId":"62","severity":1,"message":"80","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"66","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"81","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setStyling' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateAmount'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'useState' is defined but never used.","'data' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [updateAmount]",{"range":"87","text":"88"},[682,684],"[updateAmount]"]