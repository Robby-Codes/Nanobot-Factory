[{"C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\index.js":"1","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\App.js":"2","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\clicker section\\index.js":"3","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\upgrade section\\index.js":"4","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\stats section\\index.js":"5","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\smoothscroll.js":"6","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\data.js":"7"},{"size":219,"mtime":1610066491379,"results":"8","hashOfConfig":"9"},{"size":258,"mtime":1610343671848,"results":"10","hashOfConfig":"9"},{"size":1025,"mtime":1611190200610,"results":"11","hashOfConfig":"9"},{"size":2358,"mtime":1611189858474,"results":"12","hashOfConfig":"9"},{"size":1441,"mtime":1610343320021,"results":"13","hashOfConfig":"9"},{"size":868,"mtime":1610343878163,"results":"14","hashOfConfig":"9"},{"size":164,"mtime":1611190651649,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"osmq16",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\index.js",[],["33","34"],"C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\App.js",[],"C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\clicker section\\index.js",["35","36","37"],"C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\upgrade section\\index.js",["38","39"],"C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\stats section\\index.js",["40","41","42","43","44"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { data } from \"../other/data\";\r\nimport { smoothScroll } from \"../other/smoothscroll\";\r\nimport \"./stats.css\";\r\n\r\nconst Stats = () => {\r\n  const [clicks, setClicks] = useState(data.total_clicks);\r\n  useEffect(() => {\r\n    if (clicks != data.total_clicks) {\r\n      setClicks = data.total_clicks;\r\n    }\r\n  }, [data.total_clicks]);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"stats-section\"\r\n        id=\"status\"\r\n        onWheel={(e) => smoothScroll(\"status\", e)}\r\n      >\r\n        <div className=\"stats-container\">\r\n          <div>\r\n            <div>\r\n              <p>Times Clicked</p>\r\n              <h1>{clicks}</h1>\r\n            </div>\r\n            <div>\r\n              <p>Nanobots Per Second</p>\r\n              <h1>552,000</h1>\r\n            </div>\r\n            <div>\r\n              <p>Age</p>\r\n              <h1>2d:2h:2m</h1>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <p>Total Nanobot Made</p>\r\n              <h1>100,000,000,000</h1>\r\n            </div>\r\n            <div>\r\n              <p>Nanobots Used For Upgrades</p>\r\n              <h1>1,000,000,000</h1>\r\n            </div>\r\n            <div>\r\n              <p>Current Nanobots</p>\r\n              <h1>1,000,000,000</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\smoothscroll.js",["45","46","47"],"export const smoothScroll = (section, e) => {\r\n  const section_1 = document.getElementById(\"clicker\");\r\n  const section_2 = document.getElementById(\"upgrades\");\r\n  const section_3 = document.getElementById(\"status\");\r\n  if (section == \"clicker\") {\r\n    if (e.deltaY > 0) {\r\n      section_2.scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (e.deltaY < 0) {\r\n      section_1.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  } else if (section == \"upgrades\") {\r\n    if (e.deltaY < 0) {\r\n      section_1.scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (e.deltaY > 0) {\r\n      section_3.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  } else if (section == \"status\") {\r\n    if (e.deltaY < 0) {\r\n      section_2.scrollIntoView({ behavior: \"smooth\" });\r\n    } else if (e.deltaY > 0) {\r\n      section_3.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\17862\\Desktop\\Development\\Nanobot-Factory\\nanobot-factory\\src\\main\\other\\data.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":23,"column":9,"nodeType":"59","endLine":23,"endColumn":49},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":70,"column":9,"nodeType":"59","endLine":70,"endColumn":51},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":10,"column":16,"nodeType":"62","messageId":"63","endLine":10,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":11,"column":7,"nodeType":"54","messageId":"66","endLine":11,"endColumn":16},{"ruleId":"52","severity":1,"message":"67","line":11,"column":7,"nodeType":"54","messageId":"55","endLine":11,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":11,"column":19,"nodeType":"70","endLine":11,"endColumn":36},{"ruleId":"60","severity":1,"message":"71","line":5,"column":15,"nodeType":"62","messageId":"63","endLine":5,"endColumn":17},{"ruleId":"60","severity":1,"message":"71","line":11,"column":22,"nodeType":"62","messageId":"63","endLine":11,"endColumn":24},{"ruleId":"60","severity":1,"message":"71","line":17,"column":22,"nodeType":"62","messageId":"63","endLine":17,"endColumn":24},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-const-assign","'setClicks' is constant.","const","'setClicks' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'setClicks' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]